################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

# Root logger
log4j.rootLogger=INFO, MachineFile, stdout
log4j.throwableRenderer=org.apache.log4j.OsgiThrowableRenderer

# CONSOLE appender not used by default
log4j.appender.stdout.threshold=INFO
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %d[%t]|%p|%c|%X{bundle.id}-%X{bundle.name}-%X{bundle.version}|%m%n 

# Machine File Appender
log4j.appender.MachineFile=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.MachineFile.threshold=TRACE
log4j.appender.MachineFile.File=${org.ops4j.pax.logging.logdir}/machine.log
log4j.appender.MachineFile.RollingPolicy=org.apache.log4j.rolling.FixedWindowRollingPolicy
log4j.appender.MachineFile.RollingPolicy.ActiveFileName=${org.ops4j.pax.logging.logdir}/machine.log
log4j.appender.MachineFile.RollingPolicy.FileNamePattern=${org.ops4j.pax.logging.logdir}/machine-%i.log.gz
log4j.appender.MachineFile.RollingPolicy.MaxIndex=5
log4j.appender.MachineFile.TriggeringPolicy=org.apache.log4j.rolling.SizeBasedTriggeringPolicy
log4j.appender.MachineFile.TriggeringPolicy.MaxFileSize=1000000
log4j.appender.MachineFile.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.MachineFile.layout.ConversionPattern=%d[%t]|%p|%c|%X{bundle.id}-%X{bundle.name}-%X{bundle.version}|%m%n

# Category base levels. (com.ge is the default level for all Machine services).
log4j.category.com.ge=INFO
log4j.category.com.proximetry=INFO
log4j.category.com.prosyst=INFO
log4j.category.org.opcfoundation=WARN
log4j.category.com.prosysopc=WARN
# produces warnings on resetting the http server on startup.
log4j.category.com.prosyst.mbs.services.remote.json=ERROR
# produces a info message on each closed web socket.
log4j.category.org.eclipse.jetty.util.thread=ERROR
log4j.category.org.ops4j.pax.web=ERROR
log4j.category.org.apache.felix=WARN

################################################################################
#   Example appenders
################################################################################
# Sift appender
# log4j.appender.sift=org.apache.log4j.sift.MDCSiftingAppender
# log4j.appender.sift.key=bundle.name
# log4j.appender.sift.default=prosyst
# log4j.appender.sift.appender=org.apache.log4j.rolling.RollingFileAppender
# log4j.appender.sift.appender.layout=org.apache.log4j.PatternLayout
# log4j.appender.sift.appender.layout.ConversionPattern = %d [%t]|%p|%c|%m%n 
# log4j.appender.sift.appender.file=${org.ops4j.pax.logging.logdir}/$\\{bundle.name\\}.log
# log4j.appender.sift.appender.append=true

# Machine AsyncAppender
#       log4j.appender.MachineFileAsync=org.apache.log4j.AsyncAppender
#       log4j.appender.MachineFileAsync.appenders=MachineFile
# The BufferSize parameter of the AsyncAppender defines 
# the number of entries that will be stored in memory to 
# let the actual appender catch up flushing them to their 
# final destination. If this buffer fills up, the logging 
# will switch to a synchronous mode until buffer space becomes 
# available, potentially becoming a performance issue.
# Make sure this buffer is big enough, taking into account the 
# IO speed and number of log entries generated by your application.
#       log4j.appender.MachineFileAsync.BufferSize=500
# if you set Blocking to false (the default value is true) when the buffer fills up, 
# the appender will discard log events until new buffer space becomes available. 
# This can be unacceptable in applications where logging information is critical, 
# but on the other hand can be very desirable where performance is a critical factor.
#log4j.appender.MachineFileAsync.Blocking=false

################################################################################
# logging service configurations
# All new application logging service configurations should append below.
################################################################################
